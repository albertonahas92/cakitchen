<?php
/* 
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */
 
class Member extends CI_Controller{
    function __construct()
    {
        parent::__construct();
        $this->load->model('Member_model');
    } 

    /*
     * Listing of members
     */
    function index()
    {
        $data['members'] = $this->Member_model->get_all_members();
        
        $data['_view'] = 'member/index';
        $this->load->view('layouts/main',$data);
    }

    /*
     * Adding a new member
     */
    function add()
    {   
        if(isset($_POST) && count($_POST) > 0)     
        {

            $config = array(
                'upload_path' => "./uploads/members/",
                'allowed_types' => "gif|jpg|png|jpeg|pdf",
                'overwrite' => TRUE,
                'max_size' => "2048000", // Can be set to particular file size , here it is 2 MB(2048 Kb)
                'max_height' => "2000",
                'max_width' => "3000"
            );
            $this->load->library('upload', $config);
            if (  $this->upload->do_upload('image'))
            {
                $data = array('upload_data' => $this->upload->data());

                print_r($data);
            }
            else
            {

                $error = array('error' => $this->upload->display_errors());
                echo print_r($error);
            }


            $params = array(
				'name' => $this->input->post('name'),
                'image' => isset($_FILES['image'])?$_FILES['image']['name']:"default_member.jpg",
				'facebook' => $this->input->post('facebook'),
				'twitter' => $this->input->post('twitter'),
				'google' => $this->input->post('google'),
				'position' => $this->input->post('position'),
            );
            
            $member_id = $this->Member_model->add_member($params);
            redirect('member/index');
        }
        else
        {            
            $data['_view'] = 'member/add';
            $this->load->view('layouts/main',$data);
        }
    }  

    /*
     * Editing a member
     */
    function edit($id)
    {   
        // check if the member exists before trying to edit it
        $data['member'] = $this->Member_model->get_member($id);
        $image=$data['member']['image'];

        $new_upload=false;
        if(isset($data['member']['id']))
        {
            if(isset($_POST) && count($_POST) > 0)     
            {

                if(isset($_FILES['image'])) {
                    $config = array(
                        'upload_path' => "./uploads/members/",
                        'allowed_types' => "gif|jpg|png|jpeg|pdf",
                        'overwrite' => TRUE,
                        'max_size' => "2048000", // Can be set to particular file size , here it is 2 MB(2048 Kb)
                        'max_height' => "2000",
                        'max_width' => "3000"
                    );
                    $this->load->library('upload', $config);
                    if ($this->upload->do_upload('image')) {
                        $data = array('upload_data' => $this->upload->data());
                        $new_upload=true;
                    } else {

                        $error = array('error' => $this->upload->display_errors());
                        echo print_r($error);
                    }
                }


                $params = array(
					'name' => $this->input->post('name'),
                    'image' => ($new_upload==true)?$_FILES['image']['name']: $image,
					'facebook' => $this->input->post('facebook'),
					'twitter' => $this->input->post('twitter'),
					'google' => $this->input->post('google'),
					'position' => $this->input->post('position'),
                );

                $this->Member_model->update_member($id,$params);            
                redirect('member/index');
            }
            else
            {
                $data['_view'] = 'member/edit';
                $this->load->view('layouts/main',$data);
            }
        }
        else
            show_error('The member you are trying to edit does not exist.');
    } 

    /*
     * Deleting member
     */
    function remove($id)
    {
        $member = $this->Member_model->get_member($id);

        // check if the member exists before trying to delete it
        if(isset($member['id']))
        {
            $this->Member_model->delete_member($id);
            redirect('member/index');
        }
        else
            show_error('The member you are trying to delete does not exist.');
    }
    
}
