<?php
/* 
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */
 
class Program_item extends CI_Controller{
    function __construct()
    {
        parent::__construct();
        $this->load->model('Program_item_model');
    } 

    /*
     * Listing of program_item
     */
    function index()
    {
        $params['limit'] = RECORDS_PER_PAGE; 
        $params['offset'] = ($this->input->get('per_page')) ? $this->input->get('per_page') : 0;
        
        $config = $this->config->item('pagination');
        $config['base_url'] = site_url('program_item/index?');
        $config['total_rows'] = $this->Program_item_model->get_all_program_item_count();
        $this->pagination->initialize($config);

        $data['program_item'] = $this->Program_item_model->get_all_program_item($params);
        
        $data['_view'] = 'program_item/index';
        $this->load->view('layouts/main',$data);
    }

    /*
     * Adding a new program_item
     */
    function add()
    {   
        $this->load->library('form_validation');

		$this->form_validation->set_rules('day','Day','required|integer');
		$this->form_validation->set_rules('meal','Meal','required|integer');
		
		if($this->form_validation->run())     
        {   
            $params = array(
				'program_id' => $this->input->post('program_id'),
				'day' => $this->input->post('day'),
				'meal' => $this->input->post('meal'),
				'item_id' => $this->input->post('item_id'),
            );
            
            $program_item_id = $this->Program_item_model->add_program_item($params);
            redirect('program_item/index');
        }
        else
        {
			$this->load->model('Program_model');
			$data['all_programs'] = $this->Program_model->get_all_programs();

			$this->load->model('Item_model');
			$data['all_items'] = $this->Item_model->get_all_items();
            
            $data['_view'] = 'program_item/add';
            $this->load->view('layouts/main',$data);
        }
    }  

    /*
     * Editing a program_item
     */
    function edit($id)
    {   
        // check if the program_item exists before trying to edit it
        $data['program_item'] = $this->Program_item_model->get_program_item($id);
        
        if(isset($data['program_item']['id']))
        {
            $this->load->library('form_validation');

			$this->form_validation->set_rules('day','Day','required|integer');
			$this->form_validation->set_rules('meal','Meal','required|integer');
		
			if($this->form_validation->run())     
            {   
                $params = array(
					'program_id' => $this->input->post('program_id'),
					'day' => $this->input->post('day'),
					'meal' => $this->input->post('meal'),
					'item_id' => $this->input->post('item_id'),
                );

                $this->Program_item_model->update_program_item($id,$params);            
                redirect('program_item/index');
            }
            else
            {
				$this->load->model('Program_model');
				$data['all_programs'] = $this->Program_model->get_all_programs();

				$this->load->model('Item_model');
				$data['all_items'] = $this->Item_model->get_all_items();

                $data['_view'] = 'program_item/edit';
                $this->load->view('layouts/main',$data);
            }
        }
        else
            show_error('The program_item you are trying to edit does not exist.');
    } 

    /*
     * Deleting program_item
     */
    function remove($id)
    {
        $program_item = $this->Program_item_model->get_program_item($id);

        // check if the program_item exists before trying to delete it
        if(isset($program_item['id']))
        {
            $this->Program_item_model->delete_program_item($id);
            redirect('program_item/index');
        }
        else
            show_error('The program_item you are trying to delete does not exist.');
    }
    
}
