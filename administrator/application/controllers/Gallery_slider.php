<?php
/* 
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */
 
class Gallery_slider extends CI_Controller{
    function __construct()
    {
        parent::__construct();
        $this->load->model('Gallery_slider_model');
        $this->load->helper(array('form', 'url'));
    } 

    /*
     * Listing of gallery_slider
     */
    function index()
    {
        $params['limit'] = RECORDS_PER_PAGE; 
        $params['offset'] = ($this->input->get('per_page')) ? $this->input->get('per_page') : 0;
        
        $config = $this->config->item('pagination');
        $config['base_url'] = site_url('gallery_slider/index?');
        $config['total_rows'] = $this->Gallery_slider_model->get_all_gallery_slider_count();
        $this->pagination->initialize($config);

        $data['gallery_slider'] = $this->Gallery_slider_model->get_all_gallery_slider($params);
        
        $data['_view'] = 'gallery_slider/index';
        $this->load->view('layouts/main',$data);
    }

    /*
     * Adding a new gallery_slider
     */
    function add()
    {   
        if(isset($_POST) && count($_POST) > 0)     
        {

            $config = array(
                'upload_path' => "./uploads/",
                'allowed_types' => "gif|jpg|png|jpeg|pdf",
                'overwrite' => TRUE,
                'max_size' => "2048000", // Can be set to particular file size , here it is 2 MB(2048 Kb)
                'max_height' => "2000",
                'max_width' => "3000"
            );
            $this->load->library('upload', $config);
            if (  $this->upload->do_upload('image'))
            {
                $data = array('upload_data' => $this->upload->data());

                print_r($data);
            }
            else
            {

                $error = array('error' => $this->upload->display_errors());
                echo print_r($error);
            }

            $params = array(
				'title' => $this->input->post('title'),
                'image' => isset($_FILES['image'])?$_FILES['image']['name']:"default.jpg",
				'text' => $this->input->post('text'),

            );
            
            $gallery_slider_id = $this->Gallery_slider_model->add_gallery_slider($params);
            redirect('gallery_slider/index');
        }
        else
        {            
            $data['_view'] = 'gallery_slider/add';
            $this->load->view('layouts/main',$data);
        }
    }  

    /*
     * Editing a gallery_slider
     */
    function edit($id)
    {   
        // check if the gallery_slider exists before trying to edit it
        $data['gallery_slider'] = $this->Gallery_slider_model->get_gallery_slider($id);

        $image=$data['gallery_slider']['image'];

        $new_upload=false;

        if(isset($data['gallery_slider']['id']))
        {

            if(isset($_POST) && count($_POST) > 0)     
            {

                if(isset($_FILES['image'])) {
                    $config = array(
                        'upload_path' => "./uploads/",
                        'allowed_types' => "gif|jpg|png|jpeg|pdf",
                        'overwrite' => TRUE,
                        'max_size' => "2048000", // Can be set to particular file size , here it is 2 MB(2048 Kb)
                        'max_height' => "2000",
                        'max_width' => "3000"
                    );
                    $this->load->library('upload', $config);
                    if ($this->upload->do_upload('image')) {
                        $data = array('upload_data' => $this->upload->data());
                        $new_upload=true;
                    } else {

                        $error = array('error' => $this->upload->display_errors());
                        echo print_r($error);
                    }
                }


                $params = array(
					'title' => $this->input->post('title'),
                    'image' => ($new_upload==true)?$_FILES['image']['name']: $image,
					'text' => $this->input->post('text'),
                );

                $this->Gallery_slider_model->update_gallery_slider($id,$params);            
                redirect('gallery_slider/index');
            }
            else
            {
                $data['_view'] = 'gallery_slider/edit';
                $this->load->view('layouts/main',$data);
            }
        }
        else
            show_error('The gallery_slider you are trying to edit does not exist.');
    } 

    /*
     * Deleting gallery_slider
     */
    function remove($id)
    {
        $gallery_slider = $this->Gallery_slider_model->get_gallery_slider($id);

        // check if the gallery_slider exists before trying to delete it
        if(isset($gallery_slider['id']))
        {
            $this->Gallery_slider_model->delete_gallery_slider($id);
            redirect('gallery_slider/index');
        }
        else
            show_error('The gallery_slider you are trying to delete does not exist.');
    }
    
}
