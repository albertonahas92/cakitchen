<?php
/* 
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */
 
class Program_pricing extends CI_Controller{
    function __construct()
    {
        parent::__construct();
        $this->load->model('Program_pricing_model');
    } 

    /*
     * Listing of program_pricing
     */
    function index()
    {
        $data['program_pricing'] = $this->Program_pricing_model->get_all_program_pricing();
        
        $data['_view'] = 'program_pricing/index';
        $this->load->view('layouts/main',$data);
    }

    /*
     * Adding a new program_pricing
     */
    function add()
    {   
        $this->load->library('form_validation');

		$this->form_validation->set_rules('price','Price','required|numeric');
		$this->form_validation->set_rules('weeks','Weeks','required|integer');
		$this->form_validation->set_rules('text','Text','required|max_length[255]');
		$this->form_validation->set_rules('female_calories','Female Calories','required|max_length[255]');
		$this->form_validation->set_rules('male_calories','Male Calories','required|max_length[255]');
		$this->form_validation->set_rules('notes','Notes','required|max_length[255]');
		
		if($this->form_validation->run())     
        {   
            $params = array(
				'program_id' => $this->input->post('program_id'),
				'price' => $this->input->post('price'),
				'weeks' => $this->input->post('weeks'),
				'text' => $this->input->post('text'),
				'female_calories' => $this->input->post('female_calories'),
				'male_calories' => $this->input->post('male_calories'),
				'notes' => $this->input->post('notes'),
            );
            
            $program_pricing_id = $this->Program_pricing_model->add_program_pricing($params);
            redirect('program_pricing/index');
        }
        else
        {
			$this->load->model('Program_model');
			$data['all_programs'] = $this->Program_model->get_all_programs();
            
            $data['_view'] = 'program_pricing/add';
            $this->load->view('layouts/main',$data);
        }
    }  

    /*
     * Editing a program_pricing
     */
    function edit($id)
    {   
        // check if the program_pricing exists before trying to edit it
        $data['program_pricing'] = $this->Program_pricing_model->get_program_pricing($id);
        
        if(isset($data['program_pricing']['id']))
        {
            $this->load->library('form_validation');

			$this->form_validation->set_rules('price','Price','required|numeric');
			$this->form_validation->set_rules('weeks','Weeks','required|integer');
			$this->form_validation->set_rules('text','Text','required|max_length[255]');
			$this->form_validation->set_rules('female_calories','Female Calories','required|max_length[255]');
			$this->form_validation->set_rules('male_calories','Male Calories','required|max_length[255]');
			$this->form_validation->set_rules('notes','Notes','required|max_length[255]');
		
			if($this->form_validation->run())     
            {   
                $params = array(
					'program_id' => $this->input->post('program_id'),
					'price' => $this->input->post('price'),
					'weeks' => $this->input->post('weeks'),
					'text' => $this->input->post('text'),
					'female_calories' => $this->input->post('female_calories'),
					'male_calories' => $this->input->post('male_calories'),
					'notes' => $this->input->post('notes'),
                );

                $this->Program_pricing_model->update_program_pricing($id,$params);            
                redirect('program_pricing/index');
            }
            else
            {
				$this->load->model('Program_model');
				$data['all_programs'] = $this->Program_model->get_all_programs();

                $data['_view'] = 'program_pricing/edit';
                $this->load->view('layouts/main',$data);
            }
        }
        else
            show_error('The program_pricing you are trying to edit does not exist.');
    } 

    /*
     * Deleting program_pricing
     */
    function remove($id)
    {
        $program_pricing = $this->Program_pricing_model->get_program_pricing($id);

        // check if the program_pricing exists before trying to delete it
        if(isset($program_pricing['id']))
        {
            $this->Program_pricing_model->delete_program_pricing($id);
            redirect('program_pricing/index');
        }
        else
            show_error('The program_pricing you are trying to delete does not exist.');
    }
    
}
