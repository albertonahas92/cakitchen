<?php
/* 
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */
 
class Attribute extends CI_Controller{
    function __construct()
    {
        parent::__construct();
        $this->load->model('Attribute_model');
    } 

    /*
     * Listing of attributes
     */
    function index()
    {
        $params['limit'] = RECORDS_PER_PAGE; 
        $params['offset'] = ($this->input->get('per_page')) ? $this->input->get('per_page') : 0;
        
        $config = $this->config->item('pagination');
        $config['base_url'] = site_url('attribute/index?');
        $config['total_rows'] = $this->Attribute_model->get_all_attributes_count();
        $this->pagination->initialize($config);

        $data['attributes'] = $this->Attribute_model->get_all_attributes($params);
        
        $data['_view'] = 'attribute/index';
        $this->load->view('layouts/main',$data);
    }

    /*
     * Adding a new attribute
     */
    function add()
    {   
        $this->load->library('form_validation');


		$this->form_validation->set_rules('title','Title','required|max_length[255]');
		$this->form_validation->set_rules('unit','Unit','required|max_length[255]');
		$this->form_validation->set_rules('daily','Daily','required|numeric');
		
		if($this->form_validation->run())     
        {   
            $params = array(
				'is_essential' => isset($_POST['something'])? $this->input->post('is_essential'):0,
				'parent' => $this->input->post('parent'),
				'title' => $this->input->post('title'),
				'unit' => $this->input->post('unit'),
				'daily' => $this->input->post('daily'),
            );
            
            $attribute_id = $this->Attribute_model->add_attribute($params);
            redirect('attribute/index');
        }
        else
        {			$data['all_attributes'] = $this->Attribute_model->get_all_attributes();
            
            $data['_view'] = 'attribute/add';
            $this->load->view('layouts/main',$data);
        }
    }  

    /*
     * Editing a attribute
     */
    function edit($id)
    {   
        // check if the attribute exists before trying to edit it
        $data['attribute'] = $this->Attribute_model->get_attribute($id);
        
        if(isset($data['attribute']['id']))
        {
            $this->load->library('form_validation');

			$this->form_validation->set_rules('title','Title','required|max_length[255]');
			$this->form_validation->set_rules('unit','Unit','required|max_length[255]');
			$this->form_validation->set_rules('daily','Daily','required|numeric');
		
			if($this->form_validation->run())     
            {   
                $params = array(
					'is_essential' => isset($_POST['something'])? $this->input->post('is_essential'):0,
					'parent' => $this->input->post('parent'),
					'title' => $this->input->post('title'),
					'unit' => $this->input->post('unit'),
					'daily' => $this->input->post('daily'),
                );

                $this->Attribute_model->update_attribute($id,$params);            
                redirect('attribute/index');
            }
            else
            {				$data['all_attributes'] = $this->Attribute_model->get_all_attributes();

                $data['_view'] = 'attribute/edit';
                $this->load->view('layouts/main',$data);
            }
        }
        else
            show_error('The attribute you are trying to edit does not exist.');
    } 

    /*
     * Deleting attribute
     */
    function remove($id)
    {
        $attribute = $this->Attribute_model->get_attribute($id);

        // check if the attribute exists before trying to delete it
        if(isset($attribute['id']))
        {
            $this->Attribute_model->delete_attribute($id);
            redirect('attribute/index');
        }
        else
            show_error('The attribute you are trying to delete does not exist.');
    }
    
}
