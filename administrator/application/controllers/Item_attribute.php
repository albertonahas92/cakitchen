<?php
/* 
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */
 
class Item_attribute extends CI_Controller{
    function __construct()
    {
        parent::__construct();
        $this->load->model('Item_attribute_model');
    } 

    /*
     * Listing of item_attributes
     */
    function index()
    {
        $params['limit'] = RECORDS_PER_PAGE; 
        $params['offset'] = ($this->input->get('per_page')) ? $this->input->get('per_page') : 0;
        
        $config = $this->config->item('pagination');
        $config['base_url'] = site_url('item_attribute/index?');
        $config['total_rows'] = $this->Item_attribute_model->get_all_item_attributes_count();
        $this->pagination->initialize($config);

        $data['item_attributes'] = $this->Item_attribute_model->get_all_item_attributes($params);
        
        $data['_view'] = 'item_attribute/index';
        $this->load->view('layouts/main',$data);
    }

    /*
     * Adding a new item_attribute
     */
    function add()
    {   
        if(isset($_POST) && count($_POST) > 0)     
        {   
            $params = array(
				'attribute_id' => $this->input->post('attribute_id'),
				'item_id' => $this->input->post('item_id'),
				'value' => $this->input->post('value'),
            );
            
            $item_attribute_id = $this->Item_attribute_model->add_item_attribute($params);
            redirect('item_attribute/index');
        }
        else
        {
			$this->load->model('Attribute_model');
			$data['all_attributes'] = $this->Attribute_model->get_all_attributes();

			$this->load->model('Item_model');
			$data['all_items'] = $this->Item_model->get_all_items();
            
            $data['_view'] = 'item_attribute/add';
            $this->load->view('layouts/main',$data);
        }
    }  

    /*
     * Editing a item_attribute
     */
    function edit($id)
    {   
        // check if the item_attribute exists before trying to edit it
        $data['item_attribute'] = $this->Item_attribute_model->get_item_attribute($id);
        
        if(isset($data['item_attribute']['id']))
        {
            if(isset($_POST) && count($_POST) > 0)     
            {   
                $params = array(
					'attribute_id' => $this->input->post('attribute_id'),
					'item_id' => $this->input->post('item_id'),
					'value' => $this->input->post('value'),
                );

                $this->Item_attribute_model->update_item_attribute($id,$params);            
                redirect('item_attribute/index');
            }
            else
            {
				$this->load->model('Attribute_model');
				$data['all_attributes'] = $this->Attribute_model->get_all_attributes();

				$this->load->model('Item_model');
				$data['all_items'] = $this->Item_model->get_all_items();

                $data['_view'] = 'item_attribute/edit';
                $this->load->view('layouts/main',$data);
            }
        }
        else
            show_error('The item_attribute you are trying to edit does not exist.');
    } 

    /*
     * Deleting item_attribute
     */
    function remove($id)
    {
        $item_attribute = $this->Item_attribute_model->get_item_attribute($id);

        // check if the item_attribute exists before trying to delete it
        if(isset($item_attribute['id']))
        {
            $this->Item_attribute_model->delete_item_attribute($id);
            redirect('item_attribute/index');
        }
        else
            show_error('The item_attribute you are trying to delete does not exist.');
    }
    
}
